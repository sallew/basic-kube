apiVersion: v1
kind: Pod
metadata:
  name: u1804p
spec:
  securityContext:
    fsGroup: 2000
  containers:
  - name: u1804c
    image: ubuntu:18.04
    command: ["/bin/bash", "-c", "sleep 60m"]
    securityContext:
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
EOF

---

cat <<EOF | kubectl create -f -
apiVersion: v1
kind: Pod
metadata:
  name: u1804p
spec:
  containers:
  - name: u1804c
    image: ubuntu:18.04
    command: ["/bin/bash", "-c", "sleep 60m"]
    securityContext:
      capabilities:
        add: ["NET_ADMIN", "SYS_TIME"]
EOF

---
# ulimit -a
# ulimit -c unlimited  
  ## ulimit -c unlimited, command used to set the core dump file size to unlimited. 
  ## Instead of unlimited you can specify the maximum limit of the core dump file size also.
# mkdir -p /mnt/storage
# chmod -R 1777 /mnt/storage
# echo "/mnt/storage/core.%e.%h.%p.%t " > /proc/sys/kernel/core_pattern
  ## Alternative; sysctl -w kernel.core_pattern=/mnt/storage/core.%e.%h.%p.%t
# kubectl -it exec fedora-pod-storage -- /bin/bash
  ## inside pod
# ps 
  ## get <pid> of bash
# sleep 40 & kill -SEGV <pid>
---

cat <<EOF | kubectl create -f -
apiVersion: v1
kind: Pod
metadata:
  name: u1804ps
spec:
  volumes:
  - name: task-pv-storage
    hostPath:
      path: "/mnt/storage"
      type: Directory
  containers:
  - name: u1804cs
    image: ubuntu:18.04
    command: ["/bin/sh", "-c", "sleep 60m"]
    volumeMounts:
    - name: task-pv-storage
      mountPath: "/mnt/storage"
EOF

---

cat <<EOF | kubectl create -f -
apiVersion: v1
kind: Pod
metadata:
  name: u1804ps
spec:
  securityContext:
    fsGroup: 2000
  volumes:
  - name: pv-storage
    hostPath:
      path: "/mnt/storage"
      type: Directory
  containers:
  - name: u1804cs
    image: ubuntu:18.04
    command: ["/bin/sh", "-c", "sleep 60m"]
    volumeMounts:
    - name: pv-storage
      mountPath: "/mnt/storage"
    securityContext:
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
EOF

---
# sysctl -w kernel.core_pattern=/mnt/storage/core.%e.%h.%p.%t
# sysctl -a

